plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'jacoco'
	id('org.sonarqube') version '3.4.0.2513'
}

group = 'co.edu.unisabana'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'com.h2database:h2:2.1.214'
	implementation('com.google.guava:guava:31.1-jre')

	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


jacocoTestReport{
	dependsOn(tasks.test)
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				"**/dto/**",
				"**/model/*",
				"**/entity/*",
				"**/exception/*",
				"co/edu/unisabana/usuario/UsuarioApplication.class",
				"co/edu/unisabana/usuario/controller/UserController.class",
				"co/edu/unisabana/usuario/repository/dao/UserDao.class",
		])
	}))
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			classDirectories.setFrom(jacocoTestReport.getAllClassDirs())
			limit {
				minimum = 0.9
			}
		}
	}
}

project.tasks["sonarqube"].dependsOn(jacocoTestReport)

sonarqube {
	properties {
		property 'sonar.host.url', 'http://sonarqube:9000'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
